-- UILibrary.lua (vers√£o modular atualizada)

local UILibrary = {}
UILibrary.__index = UILibrary

local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local TweenService = game:GetService("TweenService")

function UILibrary:CreateWindow(title)
	local ScreenGui = Instance.new("ScreenGui")
	ScreenGui.Name = "CustomUILib"
	ScreenGui.ResetOnSpawn = false
	ScreenGui.Parent = game.CoreGui

	local MainFrame = Instance.new("Frame")
	MainFrame.Name = "MainFrame"
	MainFrame.Size = UDim2.new(0, 600, 0, 400)
	MainFrame.Position = UDim2.new(0.5, -300, 0.5, -200)
	MainFrame.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
	MainFrame.BorderSizePixel = 0
	MainFrame.Active = true
	MainFrame.Draggable = true
	MainFrame.Parent = ScreenGui

	local TitleBar = Instance.new("TextLabel")
	TitleBar.Size = UDim2.new(1, 0, 0, 30)
	TitleBar.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
	TitleBar.Text = title or "Window"
	TitleBar.TextColor3 = Color3.new(1, 1, 1)
	TitleBar.Font = Enum.Font.Arcade
	TitleBar.TextSize = 20
	TitleBar.Parent = MainFrame

	local TabButtons = Instance.new("Frame")
	TabButtons.Size = UDim2.new(0, 120, 1, -30)
	TabButtons.Position = UDim2.new(0, 0, 0, 30)
	TabButtons.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
	TabButtons.Parent = MainFrame

	local ContentFrame = Instance.new("Frame")
	ContentFrame.Size = UDim2.new(1, -120, 1, -30)
	ContentFrame.Position = UDim2.new(0, 120, 0, 30)
	ContentFrame.BackgroundTransparency = 1
	ContentFrame.Name = "ContentFrame"
	ContentFrame.Parent = MainFrame

	local self = setmetatable({}, UILibrary)
	self.Tabs = {}
	self.CurrentTab = nil
	self.TabButtons = TabButtons
	self.ContentFrame = ContentFrame
	self.MainFrame = MainFrame

	self:CreatePlayerPanel()

	return self
end

function UILibrary:CreateTab(name)
	local TabButton = Instance.new("TextButton")
	TabButton.Size = UDim2.new(1, 0, 0, 30)
	TabButton.Text = name
	TabButton.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
	TabButton.TextColor3 = Color3.new(1, 1, 1)
	TabButton.Font = Enum.Font.Arcade
	TabButton.TextSize = 18
	TabButton.Parent = self.TabButtons

	local TabContent = Instance.new("ScrollingFrame")
	TabContent.Size = UDim2.new(1, 0, 1, 0)
	TabContent.CanvasSize = UDim2.new(0, 0, 10, 0)
	TabContent.BackgroundTransparency = 1
	TabContent.Visible = false
	TabContent.ScrollBarThickness = 4
	TabContent.Parent = self.ContentFrame

	TabButton.MouseButton1Click:Connect(function()
		if self.CurrentTab then
			self.CurrentTab.Visible = false
		end
		self.CurrentTab = TabContent
		TabContent.Visible = true
	end)

	self.Tabs[name] = { Button = TabButton, Content = TabContent }

	if not self.CurrentTab then
		self.CurrentTab = TabContent
		TabContent.Visible = true
	end

	return TabContent
end

function UILibrary:CreateToggle(tabContent, text, callback)
	local Toggle = Instance.new("TextButton")
	Toggle.Size = UDim2.new(1, -10, 0, 30)
	Toggle.Position = UDim2.new(0, 5, 0, #tabContent:GetChildren() * 32)
	Toggle.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
	Toggle.TextColor3 = Color3.new(1, 1, 1)
	Toggle.Text = "[ OFF ] " .. text
	Toggle.Font = Enum.Font.Arcade
	Toggle.TextSize = 16
	Toggle.Parent = tabContent

	local state = false
	Toggle.MouseButton1Click:Connect(function()
		state = not state
		Toggle.Text = (state and "[ ON  ] " or "[ OFF ] ") .. text
		if callback then callback(state) end
	end)
end

function UILibrary:CreateButton(tabContent, text, callback)
	local Button = Instance.new("TextButton")
	Button.Size = UDim2.new(1, -10, 0, 30)
	Button.Position = UDim2.new(0, 5, 0, #tabContent:GetChildren() * 32)
	Button.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
	Button.TextColor3 = Color3.new(1, 1, 1)
	Button.Text = text
	Button.Font = Enum.Font.Arcade
	Button.TextSize = 16
	Button.Parent = tabContent

	Button.MouseButton1Click:Connect(function()
		if callback then callback() end
	end)
end

function UILibrary:CreatePlayerPanel()
	local Panel = Instance.new("Frame")
	Panel.Name = "PlayerInfo"
	Panel.Size = UDim2.new(0, 120, 0, 120)
	Panel.Position = UDim2.new(1, 10, 0, 30)
	Panel.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
	Panel.Parent = self.MainFrame

	local Avatar = Instance.new("ImageLabel")
	Avatar.Size = UDim2.new(0, 60, 0, 60)
	Avatar.Position = UDim2.new(0.5, -30, 0, 5)
	Avatar.BackgroundTransparency = 1
	Avatar.Image = "https://www.roblox.com/headshot-thumbnail/image?userId=" .. LocalPlayer.UserId .. "&width=420&height=420&format=png"
	Avatar.Parent = Panel

	local Username = Instance.new("TextLabel")
	Username.Size = UDim2.new(1, 0, 0, 20)
	Username.Position = UDim2.new(0, 0, 0, 70)
	Username.BackgroundTransparency = 1
	Username.Text = LocalPlayer.Name
	Username.TextColor3 = Color3.new(1, 1, 1)
	Username.Font = Enum.Font.Arcade
	Username.TextSize = 14
	Username.Parent = Panel

	local HealthLabel = Instance.new("TextLabel")
	HealthLabel.Size = UDim2.new(1, 0, 0, 20)
	HealthLabel.Position = UDim2.new(0, 0, 0, 90)
	HealthLabel.BackgroundTransparency = 1
	HealthLabel.TextColor3 = Color3.new(1, 1, 1)
	HealthLabel.Font = Enum.Font.Arcade
	HealthLabel.TextSize = 14
	HealthLabel.Parent = Panel

	local function updateHealth()
		if LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("Humanoid") then
			HealthLabel.Text = "HP: " .. math.floor(LocalPlayer.Character.Humanoid.Health)
		end
	end

	LocalPlayer.CharacterAdded:Connect(function()
		LocalPlayer.Character:WaitForChild("Humanoid").HealthChanged:Connect(updateHealth)
	end)

	if LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("Humanoid") then
		LocalPlayer.Character.Humanoid.HealthChanged:Connect(updateHealth)
	end
end

return UILibrary
