-- UILibrary.lua

local Players = game:GetService("Players")
local TweenService = game:GetService("TweenService")
local LocalPlayer = Players.LocalPlayer

local UILibrary = {}
UILibrary.__index = UILibrary

local dragging = false
local dragInput, dragStart, startPos

-- Cria a janela principal
function UILibrary:CreateWindow(title)
    local self = setmetatable({}, UILibrary)

    -- ScreenGui
    local gui = Instance.new("ScreenGui", game:GetService("CoreGui"))
    gui.Name = "CustomUI_" .. tostring(math.random(1000, 9999))
    gui.ResetOnSpawn = false

    -- Main Frame
    local MainFrame = Instance.new("Frame", gui)
    MainFrame.Size = UDim2.new(0, 600, 0, 400)
    MainFrame.Position = UDim2.new(0.5, -300, 0.5, -200)
    MainFrame.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
    MainFrame.BorderSizePixel = 0
    MainFrame.AnchorPoint = Vector2.new(0.5, 0.5)
    MainFrame.Active = true
    MainFrame.Draggable = false
    MainFrame.Name = "MainFrame"

    -- TopBar
    local TopBar = Instance.new("TextLabel", MainFrame)
    TopBar.Size = UDim2.new(1, 0, 0, 30)
    TopBar.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
    TopBar.Text = title or "UILibrary"
    TopBar.Font = Enum.Font.GothamBold
    TopBar.TextSize = 14
    TopBar.TextColor3 = Color3.fromRGB(255, 255, 255)
    TopBar.Name = "TopBar"

    -- Drag handler
    TopBar.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            dragging = true
            dragStart = input.Position
            startPos = MainFrame.Position
            input.Changed:Connect(function()
                if input.UserInputState == Enum.UserInputState.End then
                    dragging = false
                end
            end)
        end
    end)

    TopBar.InputChanged:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseMovement then
            dragInput = input
        end
    end)

    game:GetService("UserInputService").InputChanged:Connect(function(input)
        if input == dragInput and dragging then
            local delta = input.Position - dragStart
            MainFrame.Position = UDim2.new(
                startPos.X.Scale,
                startPos.X.Offset + delta.X,
                startPos.Y.Scale,
                startPos.Y.Offset + delta.Y
            )
        end
    end)

    -- Tab buttons
    local TabButtonsFrame = Instance.new("Frame", MainFrame)
    TabButtonsFrame.Size = UDim2.new(0, 120, 1, -30)
    TabButtonsFrame.Position = UDim2.new(0, 0, 0, 30)
    TabButtonsFrame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
    TabButtonsFrame.Name = "TabButtons"

    -- Content area
    local ContentFrame = Instance.new("Frame", MainFrame)
    ContentFrame.Size = UDim2.new(1, -120, 1, -30)
    ContentFrame.Position = UDim2.new(0, 120, 0, 30)
    ContentFrame.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
    ContentFrame.Name = "Content"

    -- Player Info Panel
    local PlayerPanel = Instance.new("Frame", MainFrame)
    PlayerPanel.Size = UDim2.new(0, 150, 1, -30)
    PlayerPanel.Position = UDim2.new(1, -150, 0, 30)
    PlayerPanel.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
    PlayerPanel.Name = "PlayerInfo"

    local Avatar = Instance.new("ImageLabel", PlayerPanel)
    Avatar.Size = UDim2.new(0, 64, 0, 64)
    Avatar.Position = UDim2.new(0.5, -32, 0, 10)
    Avatar.BackgroundTransparency = 1
    Avatar.Image = "rbxthumb://type=AvatarHeadShot&id="..LocalPlayer.UserId.."&w=420&h=420"

    local NameLabel = Instance.new("TextLabel", PlayerPanel)
    NameLabel.Size = UDim2.new(1, 0, 0, 20)
    NameLabel.Position = UDim2.new(0, 0, 0, 80)
    NameLabel.Text = LocalPlayer.DisplayName
    NameLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
    NameLabel.BackgroundTransparency = 1
    NameLabel.Font = Enum.Font.Gotham
    NameLabel.TextSize = 12

    local IDLabel = Instance.new("TextLabel", PlayerPanel)
    IDLabel.Size = UDim2.new(1, 0, 0, 20)
    IDLabel.Position = UDim2.new(0, 0, 0, 100)
    IDLabel.Text = "UserId: " .. LocalPlayer.UserId
    IDLabel.TextColor3 = Color3.fromRGB(200, 200, 200)
    IDLabel.BackgroundTransparency = 1
    IDLabel.Font = Enum.Font.Gotham
    IDLabel.TextSize = 10

    -- Tabs system
    self.Tabs = {}
    self.SelectedTab = nil

    function self:AddTab(name)
        local TabButton = Instance.new("TextButton", TabButtonsFrame)
        TabButton.Size = UDim2.new(1, 0, 0, 30)
        TabButton.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
        TabButton.Text = name
        TabButton.TextColor3 = Color3.fromRGB(255, 255, 255)
        TabButton.Font = Enum.Font.Gotham
        TabButton.TextSize = 12

        local TabContent = Instance.new("Frame", ContentFrame)
        TabContent.Size = UDim2.new(1, 0, 1, 0)
        TabContent.BackgroundTransparency = 1
        TabContent.Visible = false

        local Elements = {}

        function Elements:AddToggle(text, callback)
            local Toggle = Instance.new("TextButton", TabContent)
            Toggle.Size = UDim2.new(0, 150, 0, 25)
            Toggle.Position = UDim2.new(0, 10, 0, #TabContent:GetChildren() * 30)
            Toggle.BackgroundColor3 = Color3.fromRGB(45, 45, 45)
            Toggle.Text = "[ OFF ] " .. text
            Toggle.TextColor3 = Color3.fromRGB(255, 255, 255)
            Toggle.Font = Enum.Font.Gotham
            Toggle.TextSize = 12

            local state = false
            Toggle.MouseButton1Click:Connect(function()
                state = not state
                Toggle.Text = state and "[ ON ] " .. text or "[ OFF ] " .. text
                pcall(callback, state)
            end)
        end

        TabButton.MouseButton1Click:Connect(function()
            if self.SelectedTab then
                self.SelectedTab.Visible = false
            end
            TabContent.Visible = true
            self.SelectedTab = TabContent
        end)

        self.Tabs[name] = Elements
        return Elements
    end

    return self
end

return UILibrary
